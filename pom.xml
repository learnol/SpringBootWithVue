<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example.springbootvue</groupId>
	<artifactId>SpringBootVueApplication</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>SpringBootVueApplication</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<start-class>com.example.springbootvue.springBootVueApplication.SpringBootVueApplication</start-class>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
	
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>exec-maven-plugin</artifactId> 
				<version>1.5.0</version> <executions> <execution> <id>install node and npm</id> 
				<goals> <goal>install-node-and-npm</goal> </goals> <configuration> <nodeVersion>v12.16.1</nodeVersion> 
				<workingDirectory>${basedir}/frontend</workingDirectory> <ex </configuration> 
				</execution> <execution> <id>exec-npm-install</id> <phase>generate-sources</phase> 
				<goals> <goal>exec</goal> </goals> <configuration> <workingDirectory>${project.basedir}/frontend</workingDirectory> 
				<executable>npm</executable> <arguments> <argument>install</argument> </arguments> 
				</configuration> </execution> <execution> <id>exec-npm-build</id> <phase>generate-sources</phase> 
				<goals> <goal>exec</goal> </goals> <configuration> <workingDirectory>${project.basedir}/frontend</workingDirectory> 
				<executable>node</executable> <arguments> <argument>npm run build</argument> 
				</arguments> </configuration> </execution> <execution> <id>npm build</id> 
				<goals> <goal>copy-resources</goal> </goals> <phase>copy-resources</phase> 
				<configuration> <outputDirectory>src/main/resources/static</outputDirectory> 
				<overwrite>true</overwrite> <resources> <resource> <directory>${project.basedir}/frontend/dist</directory> 
				</resource> </resources> </configuration> </execution> </executions> </plugin> -->
	
	
	
		<!-- 	<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				  <version>LATEST_VERSION</version>
				<executions>
					Install our node and npm version to run npm/node scripts
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<workingDirectory>${project.basedir}/frontend</workingDirectory>
							<nodeVersion>v12.16.1</nodeVersion>
						</configuration>
					</execution>
					Install all project dependencies
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						optional: default phase is "generate-resources"
						<phase>generate-resources</phase>
						Optional configuration which provides for running any npm command
						<configuration>
							<workingDirectory>${project.basedir}/frontend</workingDirectory>
							<arguments>install</arguments>
						</configuration>
					</execution>
					Build and minify static files
					<execution>
						<id>npm-run-build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
	
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-frontend</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>src/main/resources/static</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>${project.basedir}/frontend/dist</directory>
									
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
